╔══════════════════════════════════════════════════════════════════════════════╗
║                    🌤️  STATUS WEATHER - IMPLEMENTACIÓN                      ║
╚══════════════════════════════════════════════════════════════════════════════╝

┌──────────────────────────────────────────────────────────────────────────────┐
│ 1️⃣  FLUJO DE LA APLICACIÓN                                                  │
└──────────────────────────────────────────────────────────────────────────────┘

    Usuario escribe ciudad ──┐
                             │
                             ▼
              ┌──────────────────────────┐
              │   obtenerClima()         │
              │   - Lee input            │
              │   - Valida               │
              │   - Hace fetch a API     │
              └──────────┬───────────────┘
                         │
                         ▼
              ┌──────────────────────────┐
              │   API OpenWeatherMap     │
              │   Devuelve:              │
              │   {                      │
              │     weather: [{          │
              │       main: "Clear"      │ ◄── Estado del clima
              │     }]                   │
              │   }                      │
              └──────────┬───────────────┘
                         │
                         ▼
              ┌──────────────────────────┐
              │   pintar(data)           │
              │   - Extrae estado        │
              │   - Llama a función      │
              └──────────┬───────────────┘
                         │
                         ▼
        ┌────────────────────────────────────────┐
        │  obtenerImagenClima(estadoClima)       │
        │                                        │
        │  🔍 CONDICIONALES AQUÍ:                │
        │                                        │
        │  if (estadoClima === 'Clear')          │
        │    return 'weather-clear.png'   ☀️     │
        │                                        │
        │  if (estadoClima === 'Clouds')         │
        │    return 'weather-clouds.png'  ☁️     │
        │                                        │
        │  if (estadoClima === 'Rain')           │
        │    return 'weather-rain.png'    🌧️     │
        │                                        │
        │  if (estadoClima === 'Drizzle')        │
        │    return 'weather-drizzle.png' 🌦️     │
        │                                        │
        └────────────────┬───────────────────────┘
                         │
                         ▼
              ┌──────────────────────────┐
              │   Muestra en pantalla    │
              │   con la imagen correcta │
              └──────────────────────────┘


┌──────────────────────────────────────────────────────────────────────────────┐
│ 2️⃣  ESTRUCTURA DE ARCHIVOS CREADOS                                          │
└──────────────────────────────────────────────────────────────────────────────┘

status-weather/
│
├── 📄 index.html ........................... Página principal
│   ├── <input id="pais"> .................. Campo para ciudad
│   ├── <button onclick="obtenerClima()"> .. Botón buscar
│   └── <div id="resultado"> ............... Contenedor resultado
│
├── 📁 src/
│   ├── 📁 js/
│   │   └── 📄 weather.js ................... ⭐ LÓGICA PRINCIPAL
│   │       ├── obtenerClima() .............. Fetch API
│   │       ├── obtenerImagenClima() ........ 🔥 CONDICIONALES
│   │       └── pintar() .................... Renderiza HTML
│   │
│   └── 📁 css/
│       └── 📄 main.css ..................... Estilos modernos
│
├── 📁 assets/ .............................. ⚠️ AÑADIR IMÁGENES AQUÍ
│   ├── 🖼️ weather-clear.png ................ Sol (Clear)
│   ├── 🖼️ weather-clouds.png ............... Nubes (Clouds)
│   ├── 🖼️ weather-rain.png ................. Lluvia (Rain)
│   └── 🖼️ weather-drizzle.png .............. Llovizna (Drizzle)
│
├── 📄 INSTRUCCIONES_IMAGENES.md ............ Guía completa
├── 📄 RESUMEN_IMPLEMENTACION.md ............ Resumen técnico
└── 📄 DIAGRAMA_FLUJO.txt ................... Este archivo


┌──────────────────────────────────────────────────────────────────────────────┐
│ 3️⃣  CÓDIGO CLAVE - Los Condicionales                                        │
└──────────────────────────────────────────────────────────────────────────────┘

// En weather.js línea 42-50 aproximadamente:

function obtenerImagenClima(estadoClima) {
  const imagenes = {
    'Clear': 'assets/weather-clear.png',      // ◄── Si Clear
    'Clouds': 'assets/weather-clouds.png',    // ◄── Si Clouds
    'Rain': 'assets/weather-rain.png',        // ◄── Si Rain
    'Drizzle': 'assets/weather-drizzle.png'   // ◄── Si Drizzle
  };
  
  // Retorna la imagen o una por defecto
  return imagenes[estadoClima] || 'assets/weather-clouds.png';
}

// Uso en pintar():
const estadoClima = d.weather[0].main;        // "Clear"
const imagenClima = obtenerImagenClima(estadoClima); // "assets/weather-clear.png"


┌──────────────────────────────────────────────────────────────────────────────┐
│ 4️⃣  COMPARACIÓN: data.weather[0].main                                       │
└──────────────────────────────────────────────────────────────────────────────┘

API Devuelve         │  Función compara      │  Retorna
─────────────────────┼───────────────────────┼─────────────────────────
"Clear"              │  imagenes['Clear']    │  weather-clear.png   ☀️
"Clouds"             │  imagenes['Clouds']   │  weather-clouds.png  ☁️
"Rain"               │  imagenes['Rain']     │  weather-rain.png    🌧️
"Drizzle"            │  imagenes['Drizzle']  │  weather-drizzle.png 🌦️
"Thunderstorm"       │  (no existe)          │  weather-clouds.png  ☁️
"Snow"               │  (no existe)          │  weather-clouds.png  ☁️


┌──────────────────────────────────────────────────────────────────────────────┐
│ 5️⃣  PASOS PARA COMPLETAR LA APLICACIÓN                                      │
└──────────────────────────────────────────────────────────────────────────────┘

✅ HECHO: Código JavaScript con condicionales
✅ HECHO: Archivo HTML con estructura
✅ HECHO: Estilos CSS responsive
✅ HECHO: Documentación completa

⚠️  FALTA: Añadir las 4 imágenes PNG en assets/

    Pasos:
    1. Identifica las 4 imágenes que te proporcionaron
    2. Renómbralas según el clima que representan:
       - Sol → weather-clear.png
       - Nubes → weather-clouds.png
       - Lluvia intensa → weather-rain.png
       - Llovizna → weather-drizzle.png
    3. Cópialas a la carpeta assets/
    4. Abre index.html en tu navegador
    5. ¡Prueba con diferentes ciudades!


┌──────────────────────────────────────────────────────────────────────────────┐
│ 6️⃣  EJEMPLOS DE PRUEBA                                                       │
└──────────────────────────────────────────────────────────────────────────────┘

Escribe estas ciudades para ver diferentes estados:

🌍 "Madrid" ................. Puede estar Clear (despejado) ☀️
🌍 "London" ................. Suele estar Clouds (nublado) ☁️
🌍 "Seattle" ................ A menudo Rain (lluvia) 🌧️
🌍 "Portland" ............... Frecuentemente Drizzle (llovizna) 🌦️


╔══════════════════════════════════════════════════════════════════════════════╗
║  ✨ IMPLEMENTACIÓN COMPLETA - Solo faltan las imágenes ✨                   ║
╚══════════════════════════════════════════════════════════════════════════════╝
